# daemon off;
# pid ./nginx.pid;
# user ${USER:-nginx};

events {
  worker_connections            1024;
  multi_accept                  on;
  accept_mutex_delay            50ms;
}

worker_rlimit_nofile            30000;

http {
  # include                       /etc/nginx/mime.types;
  include                       /opt/nginx/conf/mime.types;
  default_type                  text/html;

  server_tokens                 off;
  underscores_in_headers        on;

  # ELB/ALB is likely set to 60s; ensure we stay open at least that long
  keepalive_timeout             120;

  # send to upstream server
  proxy_send_timeout            10;

  error_log                     ./logs/error.log;
  # access_log                    ./logs/access.log json;

  # receive from upstream server
  proxy_read_timeout            10;
  # send to client
  send_timeout                  10;

  set_real_ip_from              0.0.0.0/0;
  real_ip_header                X-Forwarded-For;
  real_ip_recursive             on;

  # client_body_temp_path         './tmp/$(hostname)/client_body';
  # fastcgi_temp_path             './tmp/$(hostname)/fastcgi';
  # proxy_temp_path               './tmp/$(hostname)/proxy';
  # scgi_temp_path                './tmp/$(hostname)/scgi';
  # uwsgi_temp_path               './tmp/$(hostname)/uwsgi';

  large_client_header_buffers   4 64k;
  client_body_buffer_size       16k;
  client_header_buffer_size     64k;
  client_max_body_size          100m;
  proxy_buffering               on;
  proxy_buffers                 32 4k;
  proxy_busy_buffers_size       32k;
  proxy_max_temp_file_size      0;

  gzip                          on;
  gzip_comp_level               2;
  gzip_min_length               1400;
  gzip_proxied                  expired no-cache no-store private auth;
  gzip_types                    text/plain application/x-javascript application/json text/css text/javascript application/javascript application/octet-stream;

  server_names_hash_bucket_size 128;

  server {
    listen                      8080;
    server_name                 _;

    if ($http_x_forwarded_port = 80) {
      return                    301 '${http_x_forwarded_proto}s://${host}${request_uri}';
    }

    if ($request_method ~ ^(POST|PUT)\$) {
      return                    405;
    }

    location / {
      return                    200 'ok';
    }
  }
}
